---
import type { CollectionEntry } from "astro:content";

// layout
import BaseLayoutDocs from "./BaseLayoutDocs.astro";

// components
import Nav from "@/docs/components/nav/Nav.astro";
import SidebarNav from "@/docs/components/nav/SidebarNav.astro";
import TocLink from "@/docs/components/table-of-contents/TocLink.astro";
import TableOfContents from "@/docs/components/table-of-contents/TableOfContents.astro";
import DocsPagination from "@/docs/components/nav/DocsPagination.astro";
import SidebarCta from "@/docs/components/cta/SidebarCta.astro";

// utils
import { getAdjacentPages } from "@/docs/js/docsUtils";
import { getLocaleFromUrl } from "@/docs/js/localeUtils";
import { siteSettings } from "@/docs/config/siteSettings.json";

const currLocale = getLocaleFromUrl(Astro.url);

interface Props {
	doc: CollectionEntry<"docs">;
	headings?: import("astro").MarkdownHeading[];
}

const { doc, headings = [] } = Astro.props;
const { title, description = "", sidebar, tableOfContents, pagefind = true } = doc.data;

const minHeadingLevel = tableOfContents?.minHeadingLevel ?? 2;
const maxHeadingLevel = tableOfContents?.maxHeadingLevel ?? 3;

// Filter headings based on tableOfContents settings
const filteredHeadings = headings.filter(
	(heading) => heading.depth <= maxHeadingLevel && heading.depth >= minHeadingLevel,
);

// Get adjacent pages
const { prev, next } = await getAdjacentPages(doc.id, currLocale);
---

<BaseLayoutDocs title={title} description={description}>
	<div
		class="docs-site-container min-h-[calc(100vh-var(--nav-height))] flex-1 border-x md:grid md:grid-cols-[240px_minmax(0,1fr)] lg:grid-cols-[240px_minmax(0,1fr)_240px] lg:gap-10 2xl:grid-cols-[240px_minmax(0,1fr)_280px]"
	>
		{/* Desktop Sidebar */}
		<aside class="hidden w-full shrink-0 border-r md:block">
			<div class="sticky top-(--nav-height)">
				<div
					class="max-h-[calc(100vh-var(--nav-height))] overflow-y-auto pt-(--main-content-pt) pb-4"
				>
					<SidebarNav />
				</div>
			</div>
		</aside>

		{/* Main Content */}
		<main class="w-full min-w-0">
			{/* Mobile Table of Contents Dropdown */}
			<div class="sticky top-[calc(var(--nav-height)-1px)] z-40 -mx-4 mb-4 md:-ml-0 lg:hidden">
				<details class="mobile-toc bg-background/90 relative border-b px-4 py-2 backdrop-blur">
					<summary class="cursor-pointer list-none font-medium">On this page</summary>
					<nav
						class="bg-background absolute top-full right-0 left-0 space-y-1 border-b px-4 pt-2 pb-4"
					>
						{
							filteredHeadings.map((heading) => (
								<TocLink heading={heading} minHeadingLevel={minHeadingLevel} />
							))
						}
					</nav>
				</details>
			</div>

			{/* Content */}
			<div
				id="main-content"
				class="mr-auto w-full max-w-2xl scroll-mt-[calc(var(--nav-height)+1rem)] overflow-x-hidden pb-(--main-content-pt) md:pl-6 lg:mt-(--main-content-pt) lg:px-1 xl:mx-auto"
				data-pagefind-body={pagefind ? true : undefined}
			>
				<div class="flex">
					<h1 class="docs-h1 docs-text-gradient mb-8 pb-1">{title}</h1>
				</div>
				<div class="docs-markdown-content">
					<slot />
				</div>

				{/* Previous/Next Navigation */}
				{siteSettings.pagination !== false && <DocsPagination prev={prev} next={next} />}
			</div>
		</main>

		{/* Desktop Table of Contents */}
		<aside class="hidden text-sm lg:block">
			<div class="sticky top-(--nav-height)">
				<div
					class="max-h-[calc(100vh-var(--nav-height))] overflow-y-auto pt-(--main-content-pt) pb-4"
				>
					<TableOfContents headings={filteredHeadings} minHeadingLevel={minHeadingLevel} />

					<SidebarCta class="mt-10 mr-5 2xl:mr-12" />
				</div>
			</div>
		</aside>
	</div>

	<div class="pointer-events-none fixed inset-0 z-50 hidden dark:block">
		<div class="docs-site-container relative flex h-14">
			<div
				class="from-primary/50 dark:from-foreground/20 pointer-events-none absolute -top-[500px] -left-[100px] z-50 h-[1000px] w-[200px] -rotate-45 bg-gradient-to-b to-transparent blur-2xl"
			>
			</div>
		</div>
	</div>
</BaseLayoutDocs>

<style>
	@layer utilities {
		/* Mobile Table of Contents dropdown styles */
		.mobile-toc summary::before {
			--details-marker-size: 1.25rem;

			background-color: currentColor;
			content: "";
			display: inline-block;
			height: var(--details-marker-size);
			width: var(--details-marker-size);
			margin-inline: calc((var(--details-marker-size) / 4) * -1) 0.25rem;
			vertical-align: middle;
			/* vertical-align: -0.25rem; */
			-webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath d='M14.8 11.3 10.6 7a1 1 0 1 0-1.4 1.5l3.5 3.5-3.5 3.5a1 1 0 0 0 0 1.4 1 1 0 0 0 .7.3 1 1 0 0 0 .7-.3l4.2-4.2a1 1 0 0 0 0-1.4Z'/%3E%3C/svg%3E%0A");
			mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath d='M14.8 11.3 10.6 7a1 1 0 1 0-1.4 1.5l3.5 3.5-3.5 3.5a1 1 0 0 0 0 1.4 1 1 0 0 0 .7.3 1 1 0 0 0 .7-.3l4.2-4.2a1 1 0 0 0 0-1.4Z'/%3E%3C/svg%3E%0A");
			-webkit-mask-repeat: no-repeat;
			mask-repeat: no-repeat;
		}
		@media (prefers-reduced-motion: no-preference) {
			.mobile-toc summary::before {
				transition: transform 0.2s ease-in-out;
			}
		}
		.mobile-toc[open] > summary::before {
			transform: rotateZ(90deg);
		}
	}
</style>
